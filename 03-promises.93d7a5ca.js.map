{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAiCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,EAxCA,CACXQ,KAAMC,SAASC,cAAc,SAC7BC,OAAQF,SAASC,cAAc,YAE5BF,KAAKI,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBAEN,MACEC,UAAYf,MAAAgB,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cACV,IAAIC,EAAeC,OAAOL,EAAMM,OAC5BC,EAAeF,OAAOJ,EAAKK,OAE/B,IAAK,IAAIE,EAAI,EAAGA,GAAKN,EAAOI,MAAOE,GAAK,EAAG,CAEzC1B,EAAc0B,EADGJ,EAAeI,EAAID,GAEjCE,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjB0B,EAAA9B,GAAS+B,OAAOC,QACd,uBAAqB7B,QAAiBC,MAAU,IAGnD6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClB0B,EAAA9B,GAAS+B,OAAOG,QACd,sBAAoB/B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector(`.form`),\n  button: document.querySelector(`button`),\n};\nrefs.form.addEventListener(`submit`, handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  let initialDelay = Number(delay.value);\n  let assignedStep = Number(step.value);\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    let everyDelay = initialDelay + i * assignedStep;\n    createPromise(i, everyDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","form","document","querySelector","button","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","initialDelay","Number","value","assignedStep","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.93d7a5ca.js.map"}